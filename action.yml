name: 'Setup Go Faster'
description: It's like actions/setup-go but faster.
inputs:
  go-version:
    required: true
    description: |
      The version of go to install. It can be an exact version or a semver constraint like `1.14.x` or `^1.14.4`.
      Do not add `go` or `v` to the beginning of the version.

      Action runners come with some versions of go pre-installed. If any of those versions meet your semver constraint
      setup-go-faster will use those instead of checking whether a newer go available for download that meets your
      constraint. You can change this with the `ignore-local` input below.

      A special case value for go-version is `tip` which causes setup-go-faster to install the gotip from source. Be
      warned there is nothing fast about this. It takes between 3 and 5 minutes on Ubuntu runners and is even slower
      on Windows and MacOS runners.

      Go versions aren't really semvers, but they are close enough to use semver constraints for the most part.
      You do need to remember that go doesn't release .0 versions (the first 1.15.x release is 1.15, not 1.15.0).
      This means if you have set go-version to 1.15, when 1.15.1 is released it won't be used because 1.15 is an
      exact match. If you want any go in the 1.15 family, set go-version to `1.15.x`.

      Prereleases are specified by alphanumeric strings immediately after the minor version (like 1.16beta1). You can
      the newest 1.16 including prereleases with `~ 1.16a` because all prereleases will be greater than `a`.

      Examples:

      | go-version         | description                                                                                    |
      |--------------------|------------------------------------------------------------------------------------------------|
      | 1.x                | installs the newest go 1 that isn't a prerelease                                               |
      | 1.xa               | installs the newest go 1 including prereleases                                                 |
      | 1.15.6             | installs 1.15.6                                                                                |
      | 1.15beta1          | installs 1.15beta1                                                                             |
      | 1.15.x             | installs the newest go that starts with 1.15                                                   |
      | 1.15               | installs go 1.15, nothing newer. You generally do not want this and should use 1.15.x instead. |
      | ^1.15.4            | installs a go that is >= 1.15.4 and < 2                                                        |
      | ~1.15.4            | installs a go that is >= 1.15.4 and < 1.16                                                     |
      | >= 1.15.4 < 1.15.6 | installs a go that is >= 1.15.4 and < 1.15.6                                                   |
      | tip                | installs gotip  from source                                                                    |

  ignore-local:
    required: false
    description: |
      Normally a pre-installed version of go that meets the go-version constraints will be used instead
      of checking whether a newer version is available for download. With ignore-local, the
      action will always check for a newer version available for download. Set this to any non-empty value
      to enable.
  debug:
    required: false
    description: |
      Set to anything but empty to add debugging information to the logs. It's very noisy and is primarily just
      adds 'set -x'.
outputs:
  GOCACHE:
    description: output of `go env GOCACHE`
    value: ${{ steps.run.outputs.GOCACHE }}
  GOMODCACHE:
    description: output of `go env GOMODCACHE`
    value: ${{ steps.run.outputs.GOMODCACHE }}
  GOPATH:
    description: output of `go env GOPATH`
    value: ${{ steps.run.outputs.GOPATH }}
  GOROOT:
    description: output of `go env GOROOT`
    value: ${{ steps.run.outputs.GOROOT }}
  GOTOOLDIR:
    description: output of `go env GOTOOLDIR`
    value: ${{ steps.run.outputs.GOTOOLDIR }}
runs:
  using: composite
  steps:
    - id: run
      working-directory: ${{ github.action_path }}
      env:
        DEBUG: ${{ inputs.debug }}
        IGNORE_LOCAL_GO: ${{ inputs.ignore-local }}
        GO_VERSION: ${{ inputs.go-version }}
      shell: bash
      run: src/run
branding:
  color: green
  icon: play-circle
